<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnStart.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAXUAAAB2CAYAAAA3HgPSAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5AsPFTkf99MzpwAAGMFJREFU
        eF7tnXmQHNV9x3EcOxCwk9jGDk5STtnlcqXiJA6p/JHElVQcp+KEkDhO5QS0khAgoVtCQgeHwcFcBnRr
        V6uVVkgIJHQhISGk1b3S6tYKHYCQOOJU/ojjGChiBwPqfL89PbPvzbyeo6e7p2f2+6o+iO3p997v/fr1
        Z3pm+rik2nLD/LnkU2A1OAB6hRBCJMoe8AcgMHGMhY2Cz4LXgCeEECJxLoJrQGDiGAsbBVeBC8DVuRBC
        iHh5D0jqQgjRItQvdVYug6QuhBDpQan/FXD52KdiMVa+FPx8gXlzLm1bOP/zQ9sXvAo8IYQQifNeW/uC
        b103d/ZHLR/Pn3sZ+BkQmLtM4UpBhQ7QBwq/xN64eNHhh/p6f/LY8SPeY8cOCyGESJBHjx6+OG7VyjPX
        z5uzz3DxfvA8+BIIzF2mcCVwBTgMrI8CkLq34MwLXvfrF7ylr50XQgiRIEtefcWbsPopD1K3XAzeAb8H
        AnOXKVwJXA54lG41RKnPP32y0JkQQojk6LpwLkzqb4GrQWDuMoUrAUldCCEaTCSpc6EDfhFvSZ2NSupC
        CJEeBanPnW0KnbwJfheU+Jv/+SXwaXBlnraF8399eGfHUeCZjHy82/9OXVIXQojkodRvW7/GG7ao3XIx
        eBvL/gwH258w3U0o9ZXgHHgpz9D2Bece7Ov9MY/K553qL8C/u86fc3YuhBAifhaePWV5mMzuP/bBqOXL
        XofUXzTdTSh13pzLOrTn+ZGzjh91nuXi6lQIIURCFDmYdL7yknfr8mWu79o9Sp3nPFoLc1I/IokLIUQG
        WXTuRUldCCFahdSlnv+IMJhw5SGPa/1Wx5WHenH1kxb8COyKqV5cfbU6rjwQ17qtjisP1ZCq1Beff9n/
        QXX+qcEDf7hY9PJZZz7aXzztv+6q16rwDCn+au/KR1Q6kN9G5ZH98scqV1z1oLkxgLxRG6lJnevPPnHM
        u3npYu/Gzg7/vPbBAE8xundXjzNf0zY94w1f1O6s14owF6OfWO61v3SmJBdRYV7v2bHdb9vVZ9Kw30lr
        V/viccUXlWmbNmhugJw3jno3LRl83vjOrh01e5akKnXWY31XZ60Kx3p3z/POfPEc0+tKLxxoWZgLvqnz
        KLQ4F9XCPJrwLKy7tm11XYCRCux33FNP+EeYxbHV87XM5HWDcW50lcwN5vGxY0e8tkHojW/3bMvNIyMf
        1dAQqRe32crkNk641AfbRHXtuNXCj6NzTh63mPvCCf8TT6PyyH5Hr3jcP5osjm1BHV/LaG7k8KU+aL0h
        qWeS3MaR1EnYjlsNzN/9vXv9q+eKaVs439lfWgxZMK8kpqEdC73bN25wjqUaNDdycLtL6vbcqISknjC5
        jSOpk7AdtxqYv/v27m6afPFrmdvWr3WOpRo0N3Jwu0vq9tyoRFak/kPAm4Q1M7z69lVgjS23cWqS+gfg
        DGB7rn6ahSPgf0FhbGE7bjUwf5S62Z7B90Gj8sV+ub243QoxcawJSH3QzQ1u9zJSbxVvvAassTEfzS71
        Z8DHAG/r26z8HJgArLHlNk5NUv8J+AbgIwNd/TQDvJPnrwEKqDC2sB23Gpi/MlL/LmhUvrjd/xL8HyjE
        xLEmIHXOjb8ArTA3zoLC2MLmBrd7GalvAK3gjUnAGhvz0exSXws+BNhnMzMKWGPLbZyapf4nwNV+M8E7
        xJ0ChbGF7biVYO6637jgfXdfqNS/A1wxpMXXwPugEBPHOmXDWj/2PK6xhVFmbvwxcMXQTHBunAaFsYXN
        DeatjNTXgFbwxmhgjY35aHaprwPVPSg1o4Wxg1uBNbbcxokm9WYtjB3EInWet/zIkYPeo0cPeTO3PGvm
        6d/BdrALtIGg93QL+wVfAc8BxnMSXORYxz210o/9kcMH/YtJXOMLo8XnxidBXFJvBW9I6lksjB1I6iiM
        HdQtdebsob5e/+wWwrNMjPbmgp8F/Pj6YRD0nm5hv4Bzl090579/D/yjdsabj3v65o017TOSeg7mTFK3
        50YlJPWYCmMHkjoKYwexSP3BA71mbkxmgXxfPo0oxTGAvwElX8XwXPpa9hlJPQdzJqnbc6MSknpMhbED
        SR2FsYP4pG4foefxpZ6lwniAW+rPSuosjB1I6kFh7EBSz2Jh7EBSR2HsQFIP4Lgl9Vxh7EBSDwpjB4NP
        6lzeJNwCrLHlNk7NUv8qcLVfN67iWi8GPg5eAIWxhe24Lpiv7jde9R7q2x8m9TkgGEGu8O9GkC/B338L
        rFg57unPbrSeFuYas0kUqXN5lnCV4LW4pL4aWH3Ghau41ouJkLPmWl/qXwbXg+syyj+DpcAaW27j1CT1
        nwKeosf2XP3UCnP2p6BSfn8DxJXffwU3A14UVBhb2I5bDF+/f/9e7wHAHxiNNi6AFeBJcAMIRpAr/Btc
        DZKeJ2yf1xJ8BAS9W/0vD/D3H457/KqV/m0O7u/d483pP+4ct0kdUud54N8ErrjTgNv+V0EQlV24HMQl
        9UMgzm39L+AqEERrFy4HvEaAn8Zc9aPA/bwbWGNjPgaD1O8ErrqZJrdxapJ6EmwBPFMkyKhduBzcBlx1
        YyNsxzVhnr53+GDY/Vz4ppmP18cswbJHgKtu3BwGvPAl6L3QvwmFY9VjDu7Yurni/lOH1HlhzxuguG5a
        8KsnvqkEUdmFy0FcUo8bHlDx4q4gWrtwOfhl8Apw1Y8N5kNSzyi5jSOpk7Ad14R5otSHuKW+BOTj9TFL
        sExSl9SjIqm7GgyD60vqdk4k9VKYp0pSDyt8DTRM6mbhciCpFxUuB5J6BZgPST2j5DaOpE7CdlwT5klS
        l9TzME+Suj03KtH0UmfgWYZPr7l7u1vq/tNt5sxy1ouKK0cgstRdfUSFueBjycKkzhzxDBFeWh/ynfoy
        EESdK/y7iIdBSV1XPNXiag/wR7rLgNV/vgR/DwFWPbZ359YtFc+ESULq5pji4AZS2k/8UueTjzAfivuv
        B7Nvg7qk7uonKr43Qg4GK9H0Uh+/6klv5nPP+vcFySIztmyCpA4588WzIfi6q17NIAdTNqwLk2FkqfP+
        JXHldwbgp5ZOTLriXCzEznzvzh7/eaN8uIRxS4CXAUXNI/B/BEHUucK/wR+CqWAy2AOsMZCJT6+qfRxY
        n7HwgReONnnvmZmA/f4TsG5VwP8HPBOGsT8AeF8Yf0djTjlOHonNOn7UOTfiljqf78nTKp3jjAJyEyKO
        2KXOB1LfgTdCZxwRGfl4tyv2yFIf3tnuX4vg6isK9ALvd1SrZ0nTS/2+vbuso54s4soHca0bFeaAj1Ab
        5hZQJKlzUvDht3Hn15UHfsQ2j8aMOHiBST5GH7MEy74NzDol8CKmmsfx+nlv4dlT3oiuzrCj0jy7Ae9B
        E0RViMvEOheZYyx3NBan1NkOd/LOV14qHWNUkEu+SThijFXqeZwx1MHUZ9a7Yo8kdbYzctlS/3GLrr6i
        4spDNTS/1PfsqisBrQJzMKf/WOxSv3dXT+L5rTA3eFvmSnPjLlBSl/HneWD/vprHwfV5lMinu/NJRq6d
        JGAnsKRuFi4HNV01mITUubMX9xMVxpym1OMmCal3QOquvtJGUm8RmANJ3WbimlXe3du3endt2+o/oDrK
        OLiD3LNzu98GJRYSo6Q+gKTeYCT1FoE5kNRt+KQk3mqg3vhZn1/d8J7owzs7SvoBkvoAknqDkdRbBOZA
        UreJ9feWFpB6vN+pS+p52I6kXtQmkNTrhDmQ1G14v5UZWzZ5MzbHANopc3ZRpqVOePYL7+nuHFtERi13
        nkEiqTcYSb1FYA4kdRvGHzeufkDmpU7MccRBGuepJ4WkbpA5qQcfsV19DiaYX0m9YTSF1FNCUm8wTS/1
        MStX+BeIcCNlk3Xew4cOpCJGSb1hSOoDSOoNpumlzsCzTLnbBMQJ25fUG4akPsAHQFJvIE0v9azDxIbd
        0CtO2L6kPvdiA2C/O0CWpP464PqueJOGR+p8+lMQlV24HEjqCSKpJwwTK6mXp8LcqEbqvwn4BBnegyVt
        2G81T5ZKS+p88tG1wBVrGvD+PL8CgqjswuVAUk8QST1hmFhJvTwV5kY1Us8MrhK8lpbUM4OrBK9J6gnS
        TFLnHfG47nsZht8nWmNjYiX18lSYG2Wl3gyFsYPEpd4MhbEDST1BmknqXwR/Da7JKJwM84E1NiZWUi9P
        hbkhqQ8gqceEpG7QQKk3A7cAa2xMrKRengpzQ1IfQFKPCUndoBFSb4bC2MGtwBobEyupl6fC3JDUB5DU
        Y0JSN5DU3YWxA0k9AhXmhqQ+gKQeE5K6gaTuLowdSOoRqDA3ykqdy7OEqwSvJS51Lo+bsOJatwY+AUKl
        vrQoF0kgqRtwx3sUO2AXKi++cK5quP6jxwan1HlFaRd2XFde4oL5nZWA1O/Z2ZNC7OfLzY1qpP5RwCf7
        NwqeG+7H4irBa06p83F2rvxOXhdZ6h8ClwNXnLVwKQhaLi18DfCCK1fdclwBPgfOgsLYOFZKfcHZ0zW7
        pWbQ/pQEpL7wpTN+284+0wL9881lVC1Sb8OON71vv3fvmdPePadPVQ3XZz3WL24TtKzUeSe7Cc9t9u7F
        ZHXlJS6Y35kH+7y2GKXO2Cc9vzWV2KcfCJ0b1Uh9BDgGDjcA9rsA8I0liMouXA5KpM78TgyZG7c+vSqq
        1D8DNoKjwBVvNRwH00HQcmnha4Bzhuu62igH6/wYDIwNYx2+ZLF31/FjmA92LuKG7Y9e63zTjCR1xn5j
        9xLv7v7jicdeCfZ/98kT3ohl3X5cVpyAAyiR+hDseJP37/NmnHrBm/HCyerB+pN79/n1i9sE3HF5hJFP
        XKZxleA1p9THbH629nzVCtq/jWKMWepjt25JJfYKc6OS1Cs+eDphSh48bRYuB06pj+GT44vyOx3csjqy
        1HmbgP8AxXVrpRMELZcWvgZKTuGNDMY6rGuxd/vRI1YukmLkmqdjlfpwfMq4/dhRZ19pMw1vjDfikwPj
        suIEHIBT6rdFlDrrhey4m8CVgD+gZJWPA/+Nx1W4HIRKfWYKYkxC6uMg9VRir0/qTXlDL+Z3LKTuym+d
        Uo/jhl4dIGi5tPA1MDdYt34w1lSlvjZ+qU/LitRPZEPqbwH+cJJVXgRLQKWP2JJ6FBi7pG4hqSeLpG6Q
        kNSbgT0g9McjLgeSehQYu6RukQGpt4N8mz5mCZbNA666tYOxDuvqlNRjQFKvnl1AUk8Cxp6A1JmLoZ0d
        sdG2qL2kj4DMS33IgnnOMZkUzZ3lgAL7LOBXj0EvucK/wb+B/wL/CewfPgPaOtqdfbkYsXxZamKU1A0k
        9bIbXFKPAmNPQOrM++1HDntTDx+KhUl7doflN9tSRzuUzpS+A85xEeaJP4ob9fiV6AXAtqaBoJdc4d/g
        U+AL4POAZ7CZ9f03kgk926veBlxvxsn+klwkgaRuUJfUuePyaezsLKsUjddAUk+K/NyIWerjtz/vzTx9
        KjdX64Q5mMJTRt1H65mXOnfy6SeOO8dGmKcJO3rMvkweBkEvucK/i+gGVj3u65P37ql+GxTlIEkkdYO6
        pA7pcPD87iyrDF28yLsBRxjF4waSelIw9iSkvg1Sjyt2tNPsUuepbsX95GEMZaT+EAh6sQuXBywDVj1K
        fRKkXrMrUkBSN4gsdTAdH634Q0iWmbxvb5gYJfWkYOySuoWkniySukE9Us86nNhldlxJPSkYu6Ru0Rip
        b8f66LO03wdBvn2ffDGW8YdVq57/9cs+4+sXR7+NQlI3aGWpV9hxJfWkYOySukXaUuf4Ju3Z5cuJ8GwU
        o40u8CXAZ8Hyx9Ggx0Kf5H7wMjgD3gb+D6X8XWPqoYN+7qb3n3D33QAkdQNJvewGl9SjwNgldYvUpQ4o
        XYqJ6419brPZL09X/AH4EZgEgh4LfRLeqIvC/zTYDPy6be0L/ZzxtyrOz6x4Q1I3kNTLbnBJPQqMXVK3
        aITU8zCecdu2mv2a3AGCHgt9mvBWGuuBVS/njd7MeENSN5DUy25wST0KjF1St8iw1PkA+KBHu3A5+DCQ
        1BuIpG5SfseV1JOCsUvqFpJ6skjqBpJ62Q0uqUeBsUvqFg2X+vNbc/3nGWjPv8+6Sb4Ef1PqvJ+7WSfn
        DczPrJwJI6kbSOplN7ikHgXGLqlbNFLqHOvE3Tu9ESse9+FFeUZ7vM/6HwHGwfvCBL0X+ue2ug/0gr2A
        P676pzfyjWJy717/3vn+1a2uvlNCUjeQ1MtucEk9CoxdUrdoqNTJyf7cKYj4d8zmTaYg3gM8G+ZdMAoE
        vRf6J7xFNfeVXwDcb/y6FDvh6ZLMZSMdIqkb1C111sso/GjIc2ol9QDELqkHoJ1BJfUAxjZ2y2anIMBY
        EPRe6N+Ecu8BVj3O0SkHD+T2O0efaSCpG9QjdU4q3ulu0u5d2QSx8SNiyLMyJfWkYOySukWTSH0MCHq3
        C5cD5sQh9XYdqSdIelLH+vz125cOb5iVQXgFnP//RWMOkNSTgrFL6haSerJI6gb1ST10x20GJPWkYOyS
        ukWWpM6HY18/d3YuHjsmzvd8vz75EvzNnPCh3GYdP4dTD/U19EwYSd1AUi+7wSX1KDB2Sd0iK1LnuCfu
        2undvOpJxPSULy+jbd4T5lvgH8DnQBBJIRbOuTvBGsCHaPwQ+NuZtyGYsHOHf5ZNI86EkdQNJPWyG1xS
        jwJjl9QtMiN1E8Q5euMzpiwuGtwAgkgKsRDeNoD/fgwcAgNxAd4Thk89YtvOPhNCUjcYxFLnObeSehIw
        dkndokmkbjIEBJEUYjHhDb9Kpd7ZIanHTFak/jpYAvhxLovwUV1TwUdAsIntwuVAUo8CY5fULZpd6mbh
        ciCpp0RWpM4dN/8xLfO4SvCapB4Fxi6pW0jqySKpGyQkdf6IErrjNkNh7EBSjwJjl9Qtsiv1DQNnwph9
        zJ97HcjH4JMvwd+U+lFg1Rvauci7/cjh1M+EkdQNJHV3YexAUo8CY5fULbIqdV6kN2r9Wu/WDeu84d1L
        zNhWAJ63Pg58AQRRFeJifiaCOaAd/Dfw5+voTRu9sZhn47dvS+1MGEndQFJ3F8YOJPUoMHZJ3SKTUs+D
        eBnzqPXrXDGSvwNBVIW4TH4RnAK59dEG2+GNw/jwd2efMSOpG0jq7sLYgaQeBcYuqVtkWuoEMfOI3RHj
        ++CbIIjKLlwOPglOg4F6aGdY12JJPQYk9ZgKYweSehQYu6RuIakni6RuIKm7C2MHknoUGLukbiGpJ4uk
        bpCQ1HkZcT5pzcxIYI8Nic2A1Pl090qnjPIp8XY9xJ4BqVczN/gw5JK6KUp9B/DfNMvAe4/b9ZDfCFL/
        KnC1n4cPruB1HwP10E4iUl8Hqc+dXSwPSv1a4Iotj/2dehBjRqT+deCKOc+V4BwYqId2JPWiNsHL4CHw
        YBNzP9gG7LEhsRmQ+gXwMHDFTRg7b4Ng10PsGZB6pbnB2PeBkropSp1Hxt8DrvhI6NyoUep8QMVKwPZc
        /TwAFoC3wEA9tBO71MGkvbv9uc0xGBLhLQP4ybtcjDwD5gfAijEDUv8ArAblYp8H/gcM1EM7knpRmy0N
        EpsBqUcDsWdA6pFJUerRQH5rlHo00E4SUmdOGDsZuWZ1ffGibgakHg20I6kXtdnSILGSegUYu6Ru0RRS
        Nxj5tKQuqQ8WkFhJvQKMXVK3kNSTRVI3kNRrBImV1CvA2CV1C0k9WSR1A0m9RpBYSb0CjH2QSp1PFZLU
        AeqmKvU1knqByFIHHPSEHT3e+J7t3oRBwviebZDBAWc+4oY7bS6/25yx1Arb4WPHXH3FTdxzIxf7QWdf
        UfHzuzPe/PKNwtXX5N69sfbDe7ZMP9nv7CsOJuNNuZ54WZdPWJref8LZftzwICLO/PpPcEop9kqkKnXC
        o5LBRtRcRcHVfz24+kgKV//14Oqjbhz91EPo3Char14Sn4NF/UUh8RhNivqul1Rjr0DqUhdCCJEckroQ
        QrQQkroQQrQQ004cLyv13YCXJr+bB1J/d3LvvoszTvb7P7yYuDoQQgiREA4P86QDSP2nkHrB23ko9d8H
        fw54kxufIQvnXztixeNnb3pihTfAcu+W1U+ldjqSEEIMeiBwPjN2BPxb5ON3hnV1joLUv2a6m1DqJVw/
        b/alWPmAf2gfwPM9ef5uIx4gK4QQgxJI/aaVKwbulDnAm+B3XP4uKcELl4M+YH1X06inggshxKCEUn/y
        iZzIbR/zLp1Xg8DcZQpXApK6EEI0mhilfgU4CKyGJHUhhEgRSP3mGI/Ut4O3wY/yQOpvTek78AFPp+Hl
        1EIIIRLk2FEeqb8DqRc8DN4EfGiL/516xcKVAJ8X+UXwFcCK5LfbOhZ+fXj3ku8P717qCSGESJol7w/r
        6hxz/bw5XzZcTC//FrgMBOYuU7hSKPPmfAac9z8KCCGESJr3wDecPg6IXIIGrgJ8Fmbx9ztCCCHihxeG
        XgMCE8dY2CiQ1IUQIj0kdSGEaCEkdSGEaCFqlPoll/w/7qg0c/A1JkYAAAAASUVORK5CYII=
</value>
  </data>
</root>